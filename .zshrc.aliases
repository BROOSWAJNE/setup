# --- Vars

THIS=$0
CONFIG="$HOME/.zshrc"
CONFIG_LOCAL="$HOME/.zshrc.local"

export MANPAGER="sh -c 'col -bx | bat -l man -p'"
export EDITOR="nvim"

# --- Aliases

# ZSH
alias zconfig="$EDITOR $CONFIG"
alias zreload="source $CONFIG"
alias zlocal="$EDITOR $CONFIG_LOCAL"
alias zalias="$EDITOR $THIS"

# Vim
alias v="$EDITOR"
alias vimrc="$EDITOR $HOME/.vimrc"

# Git
alias status="git status"
alias pull="git pull"
alias pullr="git pull --rebase"
alias push="git push"
alias stash="git stash"
alias slist="git stash list | cat"
alias pop="git stash pop"
alias cherp="git cherry-pick"
alias oops="git commit --amend"

# Node
alias npr="npm run"
alias scripts="jq '.scripts' package.json"

# Docker
alias docks='docker ps -a --format "{{.Names}}ðŸ˜Ž{{.ID}}ðŸ˜Ž{{.Status}}" \
	| sort \
	| awk -F"ðŸ˜Ž" '"'"'{ print "\x1b[1m"$1"\x1b[0m\x1e(\x1b[33m"$2"\x1b[0m)\x1e"$3"\x1b[0m" }'"'"' \
	| sed -e $(echo "s/\x1eExited/\x1e\x1b[31mExited/") \
	| sed -e $(echo "s/\x1eUp/\x1e\x1b[32mUp/") \
	| column -s$(echo "\x1e") -t'

# Todo
alias td="todo.sh"
alias tde="nvim /usr/local/bin/todo.txt"

# Timewarrior
alias tlunch="timew stop"
alias tback="timew continue"
alias tshow="timew summary :id"
alias tshoww="timew summary :id from monday"
alias tweek="timew week"

# --- Utility Functions

# Text Transforms
upper() {
    if [ -z $1 ]
    then
        cat /dev/stdin | tr "[:lower:]" "[:upper:]"
    else
        echo "$1" | tr "[:lower:]" "[:upper:]"
    fi
}
lower() {
    if [ -z $1 ]
    then
        cat /dev/stdin | tr "[:upper:]" "[:lower:]"
    else
        echo "$1" | tr "[:lower:]" "[:upper:]"
    fi
}

# URI Encoding
encodechar() {
    local char=$1
    printf '%%%02X' "'$char"
}
encodeuricomponent() {
    local string=${1:-$(</dev/stdin)}
    local len=${#string}
    local encoded=''

    local pos char
    for (( pos = 0; pos < len; pos++ )); do
        char=${string:$pos:1}
        if [[ $char =~ [-_.~a-zA-Z0-9] ]]; then
            encoded+=$char
        else
            encoded+=$(encodechar $char)
        fi
    done
    echo $encoded
}
decodeuricomponent() {
    local string=${1:-$(</dev/stdin)}
    printf '%b\n' "${string//%/\\x}"
}
